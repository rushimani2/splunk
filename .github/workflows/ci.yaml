name: cdk8s-demo-pipeline

on:
  push:
    branches: [main]

jobs:
  cdk8s-demo:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install kubectl
        run: |
          KUBECTL_VERSION=$(curl -s https://dl.k8s.io/release/stable.txt)
          curl -LO "https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/kubectl
          kubectl version --client

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          helm version

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Install cdk8s CLI
        run: |
          npm install -g cdk8s-cli
          cdk8s --version

      - name: Clone cdk8s-demo
        run: |
          git clone https://github.com/vfarcic/cdk8s-demo
          cd cdk8s-demo

      - name: Set up Kubernetes tools
        run: |
          cd cdk8s-demo
          helm repo add crossplane-stable https://charts.crossplane.io/stable
          helm repo update
          helm upgrade --install crossplane crossplane-stable/crossplane \
            --namespace crossplane-system --create-namespace --wait
          kubectl apply -f crossplane/provider-aws.yaml
          kubectl apply -f crossplane/provider-sql.yaml

      - name: Initialize cdk8s Go App and Generate YAML
        run: |
          cd cdk8s-demo
          cdk8s init go-app
          cdk8s synth

      - name: Import Crossplane CRDs into cdk8s
        run: |
          cd cdk8s-demo
          cdk8s import github:crossplane/crossplane@1.9.1 --language go
          kubectl get crd -o json | cdk8s import /dev/stdin --language go
